process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: "${params.publish_dir_mode}",
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
}

process {
    withName: 'SAMPLESHEET_CHECK' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: 'DORADO_BASECALLER' {
        ext.args = "${params.dorado_args ?: ''}"
        // publishDir = [
        //     path: { "${params.outdir}/dorado/basecaller" },
        //     mode: "${params.publish_dir_mode}",
        //     saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        // ]
        publishDir = [
            enabled: false
        ]
    }

    withName: 'MERGE_BASECALLING' {
        publishDir = [
            path: { "${params.outdir}/dorado/basecaller" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'DORADO_DEMUX' {
        publishDir = [
            enabled: false
        ]
    }

    withName: 'OUTPUT_RAW_BAM' {
        publishDir = [
            path: { "${params.outdir}/grouped/${meta.group}/${meta.user}/asf/${meta.project_id}/${meta.run_id}/bam" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'TOULLIGQC_ALL' {
        ext.args = "--report-name _all_samples"
        publishDir = [
            path: { "${params.outdir}/qc/toulligqc" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MERGE_GROUPS' {
        publishDir = [
            enabled: false
        ]
    }

    withName: 'DORADO_SUMMARY' {
        ext.prefix = { "raw_dorado_summary" }
        publishDir = [
            path: { "${params.outdir}/grouped/${meta.group}/${meta.user}/asf/${meta.project_id}/${meta.run_id}" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'TOULLIGQC_GROUPED' {
        ext.args = { "--report-name _grouped" }
        publishDir = [
            path: { "${params.outdir}/grouped/${meta.group}/${meta.user}/asf/${meta.project_id}/${meta.run_id}/qc/toulligqc" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'RAW_BAM_TO_FASTQ' {
        publishDir = [
            path: { "${params.outdir}/grouped/${meta.group}/${meta.user}/asf/${meta.project_id}/${meta.run_id}/fastq" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.output_raw
        ]
    }

    withName: 'SEQKIT_SPLIT2' {
        ext.args = "-p ${params.chopper_split_count}"
        publishDir = [
            enabled: false
        ]
    }

    withName: 'CHOPPER' {
        ext.prefix = {"${fastq.baseName}"}
        ext.args = "-q ${params.min_qscore}"
        publishDir = [
            enabled: false
        ]
    }

    withName: 'CAT_FASTQ' {
        ext.prefix = {"${meta.id}.filtered"}
        ext.args = "-q ${params.min_qscore}"
        publishDir = [
            path: { "${params.outdir}/grouped/${meta.group}/${meta.user}/asf/${meta.project_id}/${meta.run_id}/fastq" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: 'FASTQC' {
        publishDir = [
            path: { "${params.outdir}/qc/fastqc" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CUSTOM_DUMPSOFTWAREVERSIONS' {
        publishDir = [
            enabled: false
        ]
    }

    withName: 'MULTIQC_ALL' {
        ext.args = "--verbose"
        publishDir = [
            path: { "${params.outdir}/qc/multiqc" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MULTIQC_GROUPED' {
        ext.args = "--verbose"
        publishDir = [
            path: { "${params.outdir}/grouped/${meta.group}/${meta.user}/asf/${meta.project_id}/${meta.run_id}/qc/multiqc" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
